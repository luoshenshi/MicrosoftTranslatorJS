{"version":3,"sources":["../src/Network/NetworkClient.ts","../src/Translator/Utils.ts","../src/Translator/Translator.ts","../src/Translator/TranslatorLocale.ts"],"sourcesContent":["export class NetworkClient {\r\n  async fetch(\r\n    url: string,\r\n    headers: Map<string, string>,\r\n    body: string\r\n  ): Promise<string | null> {\r\n    const headersObj: Record<string, string> = {};\r\n    headers.forEach((value, key) => {\r\n      headersObj[key] = value;\r\n    });\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...headersObj,\r\n      },\r\n      body: body,\r\n    });\r\n\r\n    if (!response.ok) return null;\r\n    return await response.text();\r\n  }\r\n}\r\n","export class Utils {\r\n  private static readonly BASE_URL =\r\n    \"https://api.cognitive.microsofttranslator.com/\";\r\n  private static readonly ENDPOINT = \"translate?\";\r\n\r\n  static getUrl(from: string, to: string): string {\r\n    const params = new URLSearchParams({\r\n      \"api-version\": \"3.0\",\r\n      from,\r\n      to,\r\n    });\r\n\r\n    return this.BASE_URL + this.ENDPOINT + params.toString();\r\n  }\r\n}\r\n","import { NetworkClient } from \"../Network/NetworkClient\";\r\nimport { Utils } from \"./Utils\";\r\nimport { BinaryLike, createHmac, randomUUID } from \"node:crypto\";\r\n\r\nexport class Translator {\r\n  private networkClient = new NetworkClient();\r\n  private static readonly SECRET_KEY =\r\n    \"oik6PdDdMnOXemTbwvMn9de/h9lFnfBaCWbGMMZqqoSaQaqUOqjVGm5NqsmjcBI1x+sS9ugjB55HEJWRiFXYFw==\";\r\n\r\n  async translate(text: string, from: string, to: string): Promise<string> {\r\n    const url = Utils.getUrl(from, to);\r\n    const xClientTraceId = this.clientTraceId();\r\n    const xMTSignature = this.generateSignature(url);\r\n\r\n    const headers = new Map<string, string>([\r\n      [\"X-ClientTraceId\", xClientTraceId],\r\n      [\"X-MT-Signature\", xMTSignature],\r\n    ]);\r\n\r\n    const json = JSON.stringify([{ text }]);\r\n\r\n    try {\r\n      const translatedJson = await this.networkClient.fetch(url, headers, json);\r\n\r\n      const match = /\"text\"\\s*:\\s*\"([^\"]+)\"/.exec(translatedJson || \"\");\r\n      return match?.[1] ?? \"Not Found\";\r\n    } catch (error: any) {\r\n      if (error.message?.includes(\"getaddrinfo ENOTFOUND\")) {\r\n        throw new Error(\"No Internet Connection\");\r\n      }\r\n      throw new Error(error.message || \"Unknown error\");\r\n    }\r\n  }\r\n\r\n  private clientTraceId(): string {\r\n    return randomUUID().replace(/[:\\[\\]<>]/g, \"\");\r\n  }\r\n\r\n  private generateSignature(url: string): string {\r\n    let formattedUrl = url.replace(/^https?:\\/\\//i, \"\").toLowerCase();\r\n    const encodedUrl = encodeURIComponent(formattedUrl);\r\n    const timestamp = this.getTimestamp();\r\n    const uniqueId = randomUUID().replace(/-/g, \"\");\r\n    const data =\r\n      `MSTranslatorAndroidApp${encodedUrl}${timestamp}${uniqueId}`.toLowerCase();\r\n\r\n    try {\r\n      const key: Buffer = Buffer.from(Translator.SECRET_KEY, \"base64\");\r\n\r\n      const hmac = createHmac(\"sha256\", key as unknown as BinaryLike)\r\n        .update(data)\r\n        .digest(\"base64\");\r\n\r\n      return `MSTranslatorAndroidApp::${hmac}::${timestamp}::${uniqueId}`;\r\n    } catch (e: any) {\r\n      console.error(\"Error creating HmacSignature:\", e.message);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  private getTimestamp(): string {\r\n    const now = new Date(Date.now() + 5000);\r\n    const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][\r\n      now.getUTCDay()\r\n    ];\r\n    const month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ][now.getUTCMonth()];\r\n    const date = `${weekday}, ${now\r\n      .getUTCDate()\r\n      .toString()\r\n      .padStart(2, \"0\")} ${month} ${now.getUTCFullYear()} ${now\r\n      .getUTCHours()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${now\r\n      .getUTCMinutes()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${now.getUTCSeconds().toString().padStart(2, \"0\")}gmt`;\r\n    return date.toLowerCase();\r\n  }\r\n}\r\n","export class TranslatorLocale {\r\n  /**\r\n   * AutoDetect Language\r\n   */\r\n  static AUTO_DETECT = \"\";\r\n\r\n  /**\r\n   * Afrikaans\r\n   */\r\n  static AF = \"af\";\r\n\r\n  /**\r\n   * Amharic\r\n   */\r\n  static AM = \"am\";\r\n\r\n  /**\r\n   * Arabic\r\n   */\r\n  static AR = \"ar\";\r\n\r\n  /**\r\n   * Assamese\r\n   */\r\n  static AS = \"as\";\r\n\r\n  /**\r\n   * Azerbaijani\r\n   */\r\n  static AZ = \"az\";\r\n\r\n  /**\r\n   * Bashkir\r\n   */\r\n  static BA = \"ba\";\r\n\r\n  /**\r\n   * Bulgarian\r\n   */\r\n  static BG = \"bg\";\r\n\r\n  /**\r\n   * Bhojpuri\r\n   */\r\n  static BHO = \"bho\";\r\n\r\n  /**\r\n   * Bangla\r\n   */\r\n  static BN = \"bn\";\r\n\r\n  /**\r\n   * Tibetan\r\n   */\r\n  static BO = \"bo\";\r\n\r\n  /**\r\n   * Bodo\r\n   */\r\n  static BRX = \"brx\";\r\n\r\n  /**\r\n   * Bosnian\r\n   */\r\n  static BS = \"bs\";\r\n\r\n  /**\r\n   * Catalan\r\n   */\r\n  static CA = \"ca\";\r\n\r\n  /**\r\n   * Czech\r\n   */\r\n  static CS = \"cs\";\r\n\r\n  /**\r\n   * Welsh\r\n   */\r\n  static CY = \"cy\";\r\n\r\n  /**\r\n   * Danish\r\n   */\r\n  static DA = \"da\";\r\n\r\n  /**\r\n   * German\r\n   */\r\n  static DE = \"de\";\r\n\r\n  /**\r\n   * Dogri\r\n   */\r\n  static DOI = \"doi\";\r\n\r\n  /**\r\n   * Lower Sorbian\r\n   */\r\n  static DSB = \"dsb\";\r\n\r\n  /**\r\n   * Divehi\r\n   */\r\n  static DV = \"dv\";\r\n\r\n  /**\r\n   * Greek\r\n   */\r\n  static EL = \"el\";\r\n\r\n  /**\r\n   * English\r\n   */\r\n  static EN = \"en\";\r\n\r\n  /**\r\n   * Spanish\r\n   */\r\n  static ES = \"es\";\r\n\r\n  /**\r\n   * Estonian\r\n   */\r\n  static ET = \"et\";\r\n\r\n  /**\r\n   * Basque\r\n   */\r\n  static EU = \"eu\";\r\n\r\n  /**\r\n   * Persian\r\n   */\r\n  static FA = \"fa\";\r\n\r\n  /**\r\n   * Finnish\r\n   */\r\n  static FI = \"fi\";\r\n\r\n  /**\r\n   * Filipino\r\n   */\r\n  static FIL = \"fil\";\r\n\r\n  /**\r\n   * Fijian\r\n   */\r\n  static FJ = \"fj\";\r\n\r\n  /**\r\n   * Faroese\r\n   */\r\n  static FO = \"fo\";\r\n\r\n  /**\r\n   * French\r\n   */\r\n  static FR = \"fr\";\r\n\r\n  /**\r\n   * Irish\r\n   */\r\n  static GA = \"ga\";\r\n\r\n  /**\r\n   * Galician\r\n   */\r\n  static GL = \"gl\";\r\n\r\n  /**\r\n   * Konkani\r\n   */\r\n  static GOM = \"gom\";\r\n\r\n  /**\r\n   * Gujarati\r\n   */\r\n  static GU = \"gu\";\r\n\r\n  /**\r\n   * Hausa\r\n   */\r\n  static HA = \"ha\";\r\n\r\n  /**\r\n   * Hebrew\r\n   */\r\n  static HE = \"he\";\r\n\r\n  /**\r\n   * Hindi\r\n   */\r\n  static HI = \"hi\";\r\n\r\n  /**\r\n   * Chhattisgarhi\r\n   */\r\n  static HNE = \"hne\";\r\n\r\n  /**\r\n   * Croatian\r\n   */\r\n  static HR = \"hr\";\r\n\r\n  /**\r\n   * Upper Sorbian\r\n   */\r\n  static HSB = \"hsb\";\r\n\r\n  /**\r\n   * Haitian Creole\r\n   */\r\n  static HT = \"ht\";\r\n\r\n  /**\r\n   * Hungarian\r\n   */\r\n  static HU = \"hu\";\r\n\r\n  /**\r\n   * Armenian\r\n   */\r\n  static HY = \"hy\";\r\n\r\n  /**\r\n   * Indonesian\r\n   */\r\n  static ID = \"id\";\r\n\r\n  /**\r\n   * Igbo\r\n   */\r\n  static IG = \"ig\";\r\n\r\n  /**\r\n   * Inuinnaqtun\r\n   */\r\n  static IKT = \"ikt\";\r\n\r\n  /**\r\n   * Icelandic\r\n   */\r\n  static IS = \"is\";\r\n\r\n  /**\r\n   * Italian\r\n   */\r\n  static IT = \"it\";\r\n\r\n  /**\r\n   * Inuktitut\r\n   */\r\n  static IU = \"iu\";\r\n\r\n  /**\r\n   * Inuktitut (Latin)\r\n   */\r\n  static IU_LATN = \"iu-Latn\";\r\n\r\n  /**\r\n   * Japanese\r\n   */\r\n  static JA = \"ja\";\r\n\r\n  /**\r\n   * Georgian\r\n   */\r\n  static KA = \"ka\";\r\n\r\n  /**\r\n   * Kazakh\r\n   */\r\n  static KK = \"kk\";\r\n\r\n  /**\r\n   * Khmer\r\n   */\r\n  static KM = \"km\";\r\n\r\n  /**\r\n   * Kannada\r\n   */\r\n  static KN = \"kn\";\r\n\r\n  /**\r\n   * Korean\r\n   */\r\n  static KO = \"ko\";\r\n\r\n  /**\r\n   * Kashmiri\r\n   */\r\n  static KS = \"ks\";\r\n\r\n  /**\r\n   * Kurdish\r\n   */\r\n  static KU = \"ku\";\r\n\r\n  /**\r\n   * Kyrgyz\r\n   */\r\n  static KY = \"ky\";\r\n\r\n  /**\r\n   * Lingala\r\n   */\r\n  static LN = \"ln\";\r\n\r\n  /**\r\n   * Lao\r\n   */\r\n  static LO = \"lo\";\r\n\r\n  /**\r\n   * Lithuanian\r\n   */\r\n  static LT = \"lt\";\r\n\r\n  /**\r\n   * Ganda\r\n   */\r\n  static LUG = \"lug\";\r\n\r\n  /**\r\n   * Latvian\r\n   */\r\n  static LV = \"lv\";\r\n\r\n  /**\r\n   * Maithili\r\n   */\r\n  static MAI = \"mai\";\r\n\r\n  /**\r\n   * Malagasy\r\n   */\r\n  static MG = \"mg\";\r\n\r\n  /**\r\n   * Māori\r\n   */\r\n  static MI = \"mi\";\r\n\r\n  /**\r\n   * Macedonian\r\n   */\r\n  static MK = \"mk\";\r\n\r\n  /**\r\n   * Malayalam\r\n   */\r\n  static ML = \"ml\";\r\n\r\n  /**\r\n   * Mongolian\r\n   */\r\n  static MN = \"mn\";\r\n\r\n  /**\r\n   * Manipuri\r\n   */\r\n  static MNI = \"mni\";\r\n\r\n  /**\r\n   * Marathi\r\n   */\r\n  static MR = \"mr\";\r\n\r\n  /**\r\n   * Malay\r\n   */\r\n  static MS = \"ms\";\r\n\r\n  /**\r\n   * Maltese\r\n   */\r\n  static MT = \"mt\";\r\n\r\n  /**\r\n   * Hmong Daw\r\n   */\r\n  static MWW = \"mww\";\r\n\r\n  /**\r\n   * Myanmar\r\n   */\r\n  static MY = \"my\";\r\n\r\n  /**\r\n   * Norwegian\r\n   */\r\n  static NB = \"nb\";\r\n\r\n  /**\r\n   * Nepali\r\n   */\r\n  static NE = \"ne\";\r\n\r\n  /**\r\n   * Dutch\r\n   */\r\n  static NL = \"nl\";\r\n\r\n  /**\r\n   * Sesotho sa Leboa\r\n   */\r\n  static NSO = \"nso\";\r\n\r\n  /**\r\n   * Nyanja\r\n   */\r\n  static NYA = \"nya\";\r\n\r\n  /**\r\n   * Odia\r\n   */\r\n  static OR = \"or\";\r\n\r\n  /**\r\n   * Querétaro Otomi\r\n   */\r\n  static OTQ = \"otq\";\r\n\r\n  /**\r\n   * Punjabi\r\n   */\r\n  static PA = \"pa\";\r\n\r\n  /**\r\n   * Polish\r\n   */\r\n  static PL = \"pl\";\r\n\r\n  /**\r\n   * Dari\r\n   */\r\n  static PRS = \"prs\";\r\n\r\n  /**\r\n   * Pashto\r\n   */\r\n  static PS = \"ps\";\r\n\r\n  /**\r\n   * Portuguese\r\n   */\r\n  static PT = \"pt\";\r\n\r\n  /**\r\n   * Romanian\r\n   */\r\n  static RO = \"ro\";\r\n\r\n  /**\r\n   * Russian\r\n   */\r\n  static RU = \"ru\";\r\n\r\n  /**\r\n   * Rundi\r\n   */\r\n  static RUN = \"run\";\r\n\r\n  /**\r\n   * Kinyarwanda\r\n   */\r\n  static RW = \"rw\";\r\n\r\n  /**\r\n   * Sindhi\r\n   */\r\n  static SD = \"sd\";\r\n\r\n  /**\r\n   * Sinhala\r\n   */\r\n  static SI = \"si\";\r\n\r\n  /**\r\n   * Slovak\r\n   */\r\n  static SK = \"sk\";\r\n\r\n  /**\r\n   * Slovenian\r\n   */\r\n  static SL = \"sl\";\r\n\r\n  /**\r\n   * Samoan\r\n   */\r\n  static SM = \"sm\";\r\n\r\n  /**\r\n   * Shona\r\n   */\r\n  static SN = \"sn\";\r\n\r\n  /**\r\n   * Somali\r\n   */\r\n  static SO = \"so\";\r\n\r\n  /**\r\n   * Albanian\r\n   */\r\n  static SQ = \"sq\";\r\n\r\n  /**\r\n   * Serbian\r\n   */\r\n  static SR = \"sr\";\r\n\r\n  /**\r\n   * Sesotho\r\n   */\r\n  static ST = \"st\";\r\n\r\n  /**\r\n   * Swedish\r\n   */\r\n  static SV = \"sv\";\r\n\r\n  /**\r\n   * Swahili\r\n   */\r\n  static SW = \"sw\";\r\n\r\n  /**\r\n   * Tamil\r\n   */\r\n  static TA = \"ta\";\r\n\r\n  /**\r\n   * Telugu\r\n   */\r\n  static TE = \"te\";\r\n\r\n  /**\r\n   * Thai\r\n   */\r\n  static TH = \"th\";\r\n\r\n  /**\r\n   * Tigrinya\r\n   */\r\n  static TI = \"ti\";\r\n\r\n  /**\r\n   * Turkmen\r\n   */\r\n  static TK = \"tk\";\r\n\r\n  /**\r\n   * Klingon\r\n   */\r\n  static TLH = \"tlh\";\r\n\r\n  /**\r\n   * Setswana\r\n   */\r\n  static TN = \"tn\";\r\n\r\n  /**\r\n   * Tongan\r\n   */\r\n  static TO = \"to\";\r\n\r\n  /**\r\n   * Turkish\r\n   */\r\n  static TR = \"tr\";\r\n\r\n  /**\r\n   * Tatar\r\n   */\r\n  static TT = \"tt\";\r\n\r\n  /**\r\n   * Tahitian\r\n   */\r\n  static TY = \"ty\";\r\n\r\n  /**\r\n   * Uyghur\r\n   */\r\n  static UG = \"ug\";\r\n\r\n  /**\r\n   * Ukrainian\r\n   */\r\n  static UK = \"uk\";\r\n\r\n  /**\r\n   * Urdu\r\n   */\r\n  static UR = \"ur\";\r\n\r\n  /**\r\n   * Uzbek\r\n   */\r\n  static UZ = \"uz\";\r\n\r\n  /**\r\n   * Vietnamese\r\n   */\r\n  static VI = \"vi\";\r\n\r\n  /**\r\n   * Xhosa\r\n   */\r\n  static XH = \"xh\";\r\n\r\n  /**\r\n   * Yoruba\r\n   */\r\n  static YO = \"yo\";\r\n\r\n  /**\r\n   * Yucatec Maya\r\n   */\r\n  static YUA = \"yua\";\r\n\r\n  /**\r\n   * Cantonese\r\n   */\r\n  static YUE = \"yue\";\r\n\r\n  /**\r\n   * Chinese\r\n   */\r\n  static ZH = \"zh\";\r\n\r\n  /**\r\n   * Zulu\r\n   */\r\n  static ZU = \"zu\";\r\n}\r\n"],"mappings":"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","names":[]}